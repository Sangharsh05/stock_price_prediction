import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Fetch historical data for AAPL (Apple)
df = yf.download('AAPL', start='2020-01-01', end='2025-01-01')
df.reset_index(inplace=True)

# Prepare data
df['Target'] = df['Close'].shift(-1)  # Next day's close price
df = df.dropna()

X = df[['Close']].values
y = df['Target'].values

# Train-test split (no shuffle for time series)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
predictions = model.predict(X_test)

# Metrics
mse = mean_squared_error(y_test, predictions)
r2 = r2_score(y_test, predictions)

print(f"Mean Squared Error: {mse:.2f}")
print(f"RÂ² Score: {r2:.2f}")

# Plot results
plt.figure(figsize=(10,5))
plt.plot(y_test, label="Actual Prices")
plt.plot(predictions, label="Predicted Prices")
plt.legend()
plt.xlabel("Days")
plt.ylabel("Price")
plt.title("AAPL Stock Price Prediction (Yahoo Finance + Linear Regression)")
plt.savefig("screenshot.png")
plt.show()